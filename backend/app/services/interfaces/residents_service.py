from abc import ABC, abstractmethod


class IResidentsService(ABC):
    """
    ResidentsService interface with residents methods
    """

    @abstractmethod
    def add_resident(self, id, initial, room_num, date_joined, date_left, building_id):
        """
        Add a resident to the database
        :param id: autogenerated unique id of the resident
        :type id: int
        :param initial: initial of resident
        :type initial: string
        :param room_num: room number which the resident resides in
        :type room_num: string
        :param date_joined: the date the resident joined
        :type date_joined: date
        :param date_left: the date the resident left, if exists
        :type date_left: date
        :param building_id: the building_id in which the resident is staying
        :type building_id: int
        :raises Exception: if resident creation fails
        """
        pass

    @abstractmethod
    def update_resident(self, resident_id, updated_resident):
        """
        Update a resident
        :param resident_id: resident id of resudent to be updated
        :type log_id: int
        :param updated_resident: json object from the request of the updated resident record
        :type updated_resident: json object
        :raises Exception: if resident retrieval fails
        """
        pass

    @abstractmethod
    def delete_resident(self, resident_id):
        """
        Delete a resident
        :param resident_id: id of resident to be deleted
        :type resident_id: int
        :raises Exception: if resident retrieval fails
        """
        pass

    @abstractmethod
    def get_residents(self, return_all, page_number, results_per_page, filters=None):
        """
        Gets residents in json format.
        :param return_all: whether to return all associated records or paginate
        :type return_all: boolean
        :param page_number: page number of records to retrieve
        :type page_number: int
        :param results_per_page: max number of records to retrieve for the page
        :type results_per_page: int
        :param filters: filters to apply to the query in json format
        :type filters: json
        :raises Exception: if resident retrieval fails
        """
        pass

    @abstractmethod
    def count_residents(self, filters):
        """
        Count the total number of residents
        :param filters: filters for the query
        :type filters: json
        :return: count of residents
        :rtype: int
        :raises Exception: if resident count fails
        """
        pass
